{"version":3,"file":"clientSdk.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ICyQA,SAAS,kBAAkB;QACvB,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAED,SAAgB,cAAc;QAC1B,IAAI,kBAAkB,EAAE,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACzF;QAED,OAAO,MAAM,CAAC,SAAS,CAAC;IAC5B,CAAC;IAND,wCAMC;IAED,SAAgB,cAAc,CAAC,MAAkB;QAC7C,cAAc,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IAFD,wCAEC;;;;;;;;;UCjSD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./ts/sdk/clientSdk.ts","webpack:///webpack/bootstrap","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"matrixClientSdk\"] = factory();\n\telse\n\t\troot[\"matrixClientSdk\"] = factory();\n})(this, () => {\nreturn ","import { TodoTypes } from \"./common/enums\";\nimport { BaseWidget } from \"./common/BaseWidget\";\n\nimport { Category } from \"./objects/Category\";\nimport { DocItem } from \"./objects/DocItem\";\nimport { Field } from \"./objects/Field\";\nimport { Item } from \"./objects/Item\";\nimport { Project, IProjectContext } from \"./objects/Project\";\nimport { TreeFolder } from \"./objects/TreeFolder\";\n\nimport { IPluginFieldHandler, ControlCore, ControlCoreBase, IControlOptions } from \"./plugins/ControlCore\";\nimport { PluginCore } from \"./plugins/PluginCore\";\n\nimport { AddFileAck, FolderAnswer, CopyItemAck, ExecuteParam } from \"./rest-api\";\nimport { ISimpleSessionControl, StandaloneMatrixSDK } from \"./serverSdk\";\nimport { ITitleAndId, IProjectNeeds } from \"./standalone-interfaces\";\nimport { MatrixSDK } from \"./client\";\n\nimport {\n    IPlugin,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    ISearchResult,\n    ISetField,\n    TestManager,\n    IExternalItem,\n    IItemChangeEvent,\n    IWltItemWithLinks,\n    Tasks,\n    IPluginHooks,\n    MatrixSession,\n    MR1Impl,\n    PluginManager,\n    IDB,\n    NotificationsBL,\n    ICategoryConfig,\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n} from \"../core/common/businesslogic\";\nimport { ItemConfiguration } from \"../core/common/businesslogic/ItemConfiguration\";\nimport { FieldDescriptions } from \"../core/common/businesslogic/FieldDescriptions\";\nimport { SectionDescriptions } from \"../core/common/businesslogic/FieldHandlers/Document/SectionDescriptions\";\n\nimport { IApp, IMatrix, IContextInformation, UIToolsConstants } from \"../core/common/matrixlib/MatrixLibInterfaces\";\nimport { SimpleItemTools } from \"../core/common/matrixlib/SimpleItemTools\";\n\nimport { Application } from \"../core/common/UI/Application\";\nimport { IBaseControlOptions, IBaseControl } from \"../core/common/UI/Controls/BaseControl\";\nimport { refLinkStyle, refLinkTooltip } from \"../core/common/UI/Parts/RefLinkDefines\";\nimport { IItemSelectionParams } from \"../core/common/UI/Controls/itemSelection\";\nimport { ILineEditorLine } from \"../core/common/UI/ILineEditor\";\n\nimport {\n    IStringMap,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    IReference,\n    IAnyMap,\n    ControlState,\n    IDataStorage,\n    GlobalMatrix,\n} from \"../core/globals\";\n\nimport {\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRGetProject_Todos_GetTodosAck,\n    XRGetTodosAck,\n    XRProjectInfo,\n    XRTodo,\n    XRTodoCount,\n    XRTrimNeedle,\n    XRTrimNeedleItem,\n} from \"../core/RestResult\";\n\nimport { ProjectStorage } from \"../core/client/ProjectStorage\";\nimport { Notifications } from \"../core/client/plugins/Notifications\";\n\nimport {\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    IWidgetScope,\n} from \"../core/WidgetDashboard/WidgetPluginManager\";\nimport { WidgetPluginsConstants } from \"../core/WidgetDashboard/WidgetPluginsContainer\";\n\nimport {\n    IDropdownOption,\n    ILabel,\n    INotificationConfig,\n    IFieldParameter,\n    IContextPageConfigTab,\n} from \"../core/ProjectSettings\";\n\nimport { IConfigApp } from \"../core/admin/lib/IConfigApp\";\nimport { ConfigPage } from \"../core/admin/lib/ConfigPage\";\nimport { LineEditor } from \"../core/admin/lib/LinEditor\";\n\n// types and interfaces\nexport type {\n    IDashboardParametersBase,\n    IServerSettingsBase,\n    IProjectSettingsBase,\n    IPluginFeatureDashboard,\n    IDashboardPage,\n    IPluginFeatureBase,\n    IPluginFieldValueBase,\n    ITinyMenu,\n    IPluginMenuAction,\n    IPluginSearch,\n    IPluginFieldParameterBase,\n    IPluginFieldOptionsBase,\n    IPluginPrintParamsBase,\n    IPluginConfig,\n    IPluginFeature,\n    IPluginFeatureField,\n    IPluginSettingPage,\n    ITool,\n    IExternalPlugin,\n    IDashboardParameters,\n} from \"./plugins/interfaces\";\n\nexport type {\n    AddFileAck,\n    FolderAnswer,\n    CopyItemAck,\n    ExecuteParam,\n    ISetField,\n    IPluginFieldHandler,\n    ICategoryConfig,\n    IBaseControl,\n    TestManager,\n    IDataStorage,\n    IDB,\n    ILineEditorLine,\n    IDropdownOption,\n    IPlugin,\n    IStringMap,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    IWltItemWithLinks,\n    IBaseControlOptions,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    ISearchResult,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetTodosAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRTrimNeedleItem,\n    XRTodo,\n    XRTrimNeedle,\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    XRProjectInfo,\n    IReference,\n    ILabel,\n    IItemSelectionParams,\n    IAnyMap,\n    INotificationConfig,\n    IContextInformation,\n    IContextPageConfigTab,\n    XRTodoCount,\n    XRGetProject_Todos_GetTodosAck,\n    IItemChangeEvent,\n    IExternalItem,\n    IFieldParameter,\n    IConfigApp,\n    IProjectContext,\n    IControlOptions,\n    ISimpleSessionControl,\n    ITitleAndId,\n    IProjectNeeds,\n};\n\n// classes\nexport type {\n    UIToolsConstants,\n    FieldDescriptions,\n    SectionDescriptions,\n    IWidgetScope,\n    ProjectStorage,\n    WidgetPluginsConstants,\n    refLinkStyle,\n    refLinkTooltip,\n    ControlState,\n    ItemConfiguration,\n    Notifications,\n    Tasks,\n    ControlCore,\n    ControlCoreBase,\n    PluginCore,\n    LineEditor,\n    ConfigPage,\n    NotificationsBL,\n    TodoTypes,\n    Item,\n    Field,\n    Project,\n    BaseWidget,\n    Category,\n    DocItem,\n    TreeFolder,\n    StandaloneMatrixSDK,\n    SimpleItemTools,\n};\n\n// handlers\nexport type {\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n};\n\nexport interface ClientMatrixSdk {\n    plugins: PluginManager;\n    globalMatrix: GlobalMatrix;\n    matrixSession: MatrixSession;\n    app: IApp;\n    ml: IMatrix;\n    notificationSetting: string;\n    defaultNotificationConfig: INotificationConfig;\n    pluginHooks: IPluginHooks;\n    MR1: MR1Impl;\n    matrixApplicationUI: Application;\n    matrixsdk: MatrixSDK;\n    ConfigPage: typeof ConfigPage; // typeof because we're referencing an instance\n    PluginCore: typeof PluginCore; // typeof because we're referencing an instance\n}\n\ndeclare module window {\n    const matrixSdk: ClientMatrixSdk;\n}\n\nfunction isOutsideMatrixApp(): boolean {\n    return !(window && window.matrixSdk);\n}\n\nexport function getSdkInstance(): ClientMatrixSdk {\n    if (isOutsideMatrixApp()) {\n        throw new Error(\"Client SDK can only be used within Matrix Requirements application\");\n    }\n\n    return window.matrixSdk;\n}\n\nexport function registerPlugin(plugin: PluginCore): void {\n    getSdkInstance().plugins.register(plugin);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(279);\n",""],"names":[],"sourceRoot":""}