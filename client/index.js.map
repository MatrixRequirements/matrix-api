{"version":3,"file":"clientSdk.js","mappings":"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","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./ts/core/client/plugins/ScheduleReviewDefines.ts","webpack:///./ts/core/common/businesslogic/FieldDescriptions.ts","webpack:///./ts/core/common/businesslogic/PluginManager.ts","webpack:///./ts/core/globals.ts","webpack:///./ts/core/common/UI/LineType.ts","webpack:///./ts/core/common/UI/Components/ProjectViewDefines.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./ts/sdk/clientSdk.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"matrixClientSdk\"] = factory();\n\telse\n\t\troot[\"matrixClientSdk\"] = factory();\n})(this, () => {\nreturn ","import { XRTrimNeedleItem } from \"../../RestResult\";\nimport { IBaseControlOptions } from \"../../common/UI/Controls/BaseControl\";\nimport { ControlState, IItem, IStringMap } from \"../../globals\";\n\nexport interface IReviewConfig {\n    // this configures tool available to manage review\n    tasks?: IReviewConfigTask; // to be configured if (jira) tasks should be created\n    lockLabel?: ILockAction; // action to lock items\n    doneLabel?: IReviewStatusUpdate; // action to parse review table to set labels depending on status\n    mailTo?: IMailAction; // button to mail to users\n    allowSelectUserGroups?: boolean; // if not set to false the reviewer popup will have the possibility to select groups\n    showVersions?: boolean; // if true show reviewed version in table for each item\n    showAnnotations?: boolean; // if true show annotation button\n    annotationMasters?: string[]; // names of users who can edit other peoples comments\n    showComments?: boolean; // if true show review comment in table for each item\n    showInline?: boolean; // if true show inline triangle/text\n    showHistory?: boolean; // if true show history button for each item\n    /** like showHistoryOutOfDate but it only shows items as out of date if review is not yet completed */\n    showHistoryOutOfDateBeforeDone?: boolean;\n    /** shows items as out of date if current revision is newer than the one in the review */\n    showHistoryOutOfDate?: boolean;\n    readonly?: boolean;\n    appendComments?: boolean; // if true put new comments at bottom of comment fields\n    statusDropdown?: string; // can be set to overwrite the default status label \"dd_reviewOptions\"\n    canBeModified?: boolean; // can be set to true if review can be modified (add/remove users/items)\n    canBeModifiedBy?: string[]; // users who can modify review, empty for all\n    cellAskEdit?: string; // if set the table shows this to indicate that user can do something\n    autoshowContext?: boolean; // show context frame if not visible once an item cell has been selected\n    createDoc?: ICreateDoc; // if set, a button is added to create a signable doc with all review details\n    hide_UI?: boolean; // to temporarily hide the control in UI\n    autoLock?: boolean; // if true, lock will be set on all items, as soon as the review is saved for a very first time with reviewers and items selected\n    autoComment?: boolean; // if true, labels which will be set through the review (lock or progress) will have the REVIEW id in in the change comment\n}\n\nexport interface ICreateDoc {\n    template: string; // the DOC id to be used as template\n    section: string; // the title of the section to be filled\n    pasteTo: string; // parent DOC folder defaults to F-DOC-1\n    hide?: string[]; // remove given field types\n}\n\nexport interface IReviewAction {\n    // defines button\n    buttonName: string; // name of button to do action\n    users: string[]; // users who can operate button - empty/null for all\n}\n\nexport interface IMailAction extends IReviewAction {\n    mailSubject: string; // subject of email (_id_ for item item id)\n}\n\nexport interface ILockAction extends IReviewAction {\n    label: string; // label to set\n}\n\nexport interface IReviewStatusUpdate extends IReviewAction {\n    // if all reviews of an item have a drop down value which is in the dropdown group passed -> a passed label can be set\n    passedLabel?: string; // label to set\n    // if 1+  item is failed  (empty or dropdown group todo) the failed label will be set\n    failedLabel?: string; // label to set (optional)\n    // if 1+  item is not yet reviewed (empty or dropdown group todo) the todo label will be set\n    todoLabel?: string; // label to set (optional)\n}\n\nexport interface IReviewActionCategoryLabel {\n    label: string; // which label\n    category: string; // for which category\n}\n\nexport interface IReviewConfigTask {\n    buttonName: string; // name of button to create tickets\n    users: string[]; // users who can operate button - empty/null for all\n    taskPluginId: number; // e.g. jira id\n    taskIssueType: string;\n    taskProject: string;\n    taskDescription?: string;\n}\n\nexport interface ITableReviewData {\n    reviewtable: IStringMap[];\n}\n\nexport interface INeedleMap {\n    [key: string]: XRTrimNeedleItem;\n}\n\nexport interface IItemReviews {\n    [key: string]: IItemReview;\n}\n\nexport interface IItemReview {\n    passed: string[];\n    failed: string[];\n    todo: string[];\n    all: IItem[];\n}\n\nexport class ReviewControlColumns {\n    static COL_COMMENT_LOG = \"commentlog\";\n    static COL_ITEM = \"reviewitem\";\n    static COL_VERSION = \"_version\";\n    static COL_ANNOTATIONS = \"_annotation\";\n}\n\nexport interface IReviewControlOptions extends IBaseControlOptions {\n    controlState?: ControlState;\n    canEdit?: boolean;\n    help?: string;\n    fieldValue?: any;\n    valueChanged?: () => void;\n    parameter: IReviewConfig;\n    readOnly?: boolean;\n}\n","import { JsonEditorValidation } from \"../../../jsonvalidation/JsonValidator\";\nimport { IFieldDescription } from \"../../ProjectSettings\";\nimport { plugins } from \"./PluginManager\";\nexport { FieldDescriptions };\n\nclass FieldDescriptions {\n    public static Field_sourceref = \"sourceref\";\n    public static Field_markAsTemplate = \"markAsTemplate\";\n    public static Field_dhf = \"dhf\";\n    public static Field_docFilter = \"docFilter\";\n\n    // normal fields\n    public static Field_richtext = \"richtext\";\n    public static Field_text = \"text\";\n    public static Field_section = \"section\";\n    public static Field_fileManager = \"fileManager\";\n    public static Field_tasksControl = \"tasksControl\";\n    public static Field_textline = \"textline\";\n    public static Field_user = \"user\";\n    public static Field_date = \"date\";\n    public static Field_dropdown = \"dropdown\";\n    public static Field_links = \"links\";\n    public static Field_uplinkinfo = \"uplinkinfo\";\n    public static Field_crosslinks = \"crosslinks\";\n    public static Field_risk2 = \"risk2\";\n    public static Field_checkbox = \"checkbox\";\n    public static Field_gateControl = \"gateControl\";\n    public static Field_colorPicker = \"colorPicker\";\n    public static Field_steplist = \"steplist\";\n\n    // toolbar\n    public static Field_labels = \"labels\";\n    public static Field_workflow = \"workflow\";\n\n    // tests and xtcs\n    public static Field_test_steps = \"test_steps\";\n    public static Field_test_steps_result = \"test_steps_result\";\n    public static Field_test_result = \"test_result\";\n\n    // agile sync\n    public static Field_syncStatus = \"syncStatus\";\n    public static Field_syncSourceInfo = \"syncSourceInfo\";\n\n    // beta should not be used really\n    public static Field_report = \"report\";\n    public static Field_cascadingSelect = \"cascadingSelect\";\n    public static Field_hyperlink = \"hyperlink\";\n\n    // technical - these need to be added once when creating a new DOC category or something special like this\n    public static Field_reportId = \"reportId\";\n    public static Field_filter_file = \"filter_file\";\n    public static Field_signature = \"signature\";\n    public static Field_signatureControl = \"signatureControl\";\n    public static Field_signCache = \"signCache\";\n    static Field_publishedItemList = \"publishedItemList\";\n    static Field_publishedFilesList = \"publishedFilesList\";\n    static Field_publishedContent = \"publishedContent\";\n    static Field_publishedTitle = \"publishedTitle\";\n    static Field_docTraining = \"docTraining\";\n    static Field_docReview = \"docReview\";\n    static Field_risk = \"risk\";\n    static Field_htmlForm = \"htmlForm\";\n    static Field_hidden = \"hidden\";\n    static Field_dummy = \"dummy\";\n    static Field_guid = \"guid\";\n    static Field_oid = \"oid\";\n    static Field_versionLive = \"versionLive\";\n    static Field_version = \"version\";\n    static Field_currentVersion = \"currentVersion\";\n    static Field_riskFolder = \"riskFolder\";\n    static Field_reviewControl = \"reviewControl\";\n\n    public static findById(idToFind: string): IFieldDescription | undefined {\n        let returnedValue = undefined;\n        let result = this.descriptions.filter((description) => description.id === idToFind);\n\n        returnedValue = result.length === 1 ? result[0] : undefined;\n        if (returnedValue == undefined) {\n            // try to find it in the plugins, if they exist\n            let descriptionFromPlugins = plugins?.getFieldConfigOptions() ?? [];\n            result = descriptionFromPlugins.filter((description) => description.id === idToFind);\n            returnedValue = result.length === 1 ? result[0] : undefined;\n        }\n        return returnedValue;\n    }\n\n    public static appendFieldDescriptions(newFields: IFieldDescription[]) {\n        for (let fco of newFields) {\n            let result = this.descriptions.filter((description) => description.id === fco.id);\n            if (result.length == 0) {\n                this.descriptions.push(fco);\n            }\n        }\n    }\n\n    public static get(): IFieldDescription[] {\n        return FieldDescriptions.descriptions;\n    }\n\n    // A [fieldId]: JsonValidationFunction map built up at runtime.\n    // We can't build this at compile time because validation functions are high-level entities.\n    private static validationFunctions = {};\n\n    private static descriptions: IFieldDescription[] = [\n        // [ \"richtext\",  \"user\" , \"date\", \"text\", \"textline\" ,\"test_result\",\n        //         \"crosslinks\", \"gateControl\",\"fileManager\", \"reviewControl\"];\n        // docs and sign\n        {\n            id: FieldDescriptions.Field_sourceref,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Source (Original Document) [sourceref]\",\n            class: \"docsign\",\n            help: \"keeps a reference to original document when copying and pasting\",\n        },\n        {\n            id: FieldDescriptions.Field_markAsTemplate,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Mark as template [markAsTemplate]\",\n            class: \"docsign\",\n            help: \"allows to define DOC templates which can be used in other projects\",\n        },\n        {\n            id: FieldDescriptions.Field_dhf,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"DFH field  [dhf]\",\n            class: \"docs\",\n            help: \"for documents only: holds a section in a document\",\n        },\n        {\n            id: FieldDescriptions.Field_docFilter,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Label Filter in DOCs [docFilter]\",\n            class: \"docs\",\n            help: \"a special field for Document categories to filter documents by label\",\n        },\n\n        // normal fields\n        {\n            id: FieldDescriptions.Field_richtext,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUnsafe: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Rich Text Control [richtext]\",\n            class: \"all\",\n            help: \"a rich text editor field (with formatting)\",\n        },\n        {\n            id: FieldDescriptions.Field_text,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUnsafe: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Plain Text Control [text]\",\n            class: \"all\",\n            help: \"a text editor field (no formatting)\",\n        },\n        {\n            id: FieldDescriptions.Field_section,\n            capabilities: {\n                canBeUsedInDocs: false,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: true,\n                canBeReadonly: false,\n                canRequireContent: false,\n            },\n            label: \"Section with explanation [section]\",\n            class: \"all\",\n            help: \"a title with some explanation to separate fields\",\n        },\n        {\n            id: FieldDescriptions.Field_fileManager,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n            },\n            label: \"File Manager Control [fileManager]\",\n            class: \"all\",\n            help: \"a control which allows to attach files by browsing or drag and drop\",\n        },\n        {\n            id: FieldDescriptions.Field_tasksControl,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Tasks Control [tasksControl]\",\n            class: \"all\",\n            help: \"a field which shows links to external systems, like JIRA, github etc. (eg extensions folder)\",\n        },\n        {\n            id: FieldDescriptions.Field_textline,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUnsafe: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Text Line Control [textline]\",\n            class: \"all\",\n            help: \"a field for one line of text\",\n        },\n        {\n            id: FieldDescriptions.Field_user,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"User Select Control [user]\",\n            class: \"all\",\n            help: \"a drop down to select a user in the project\",\n        },\n        {\n            id: FieldDescriptions.Field_date,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Date Select Control [date]\",\n            class: \"all\",\n            help: \"a field to select a date\",\n        },\n        {\n            id: FieldDescriptions.Field_dropdown,\n            capabilities: {\n                canBeUnsafe: true,\n                needsConfiguration: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Drop Down Control [dropdown]\",\n            class: \"all\",\n            help: \"a drop-down selection field\",\n        },\n        {\n            id: FieldDescriptions.Field_links,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Down Traces Control [links]\",\n            class: \"all\",\n            help: \"a field to show and edit down traces as defined in the traceability configuration\",\n        },\n        {\n            id: FieldDescriptions.Field_uplinkinfo,\n            capabilities: {\n                schema: \"IUpLinkDetails\",\n                needsConfiguration: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Uplink information [uplinkinfo]\",\n            class: \"all\",\n            help: \"a field to show information about up traces in the user interface\",\n        },\n        {\n            id: FieldDescriptions.Field_crosslinks,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Cross Project Link Control [crosslinks]\",\n            class: \"all\",\n            help: \"a field to add links to other matrix projects\",\n        },\n        {\n            id: FieldDescriptions.Field_risk2,\n            capabilities: {\n                canBeUnsafe: true,\n                onlyOne: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Risk Control [risk2]\",\n            class: \"all\",\n            help: \"a field rendering an FMEA-type risk field\",\n        },\n        {\n            id: FieldDescriptions.Field_checkbox,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n            },\n            label: \"Checkbox Control [checkbox]\",\n            class: \"all\",\n            help: \"a checkbox field\",\n        },\n        {\n            id: FieldDescriptions.Field_hyperlink,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Hyperlink Control [hyperlink]\",\n            class: \"all\",\n            help: \"a field holding a hyperlink (url)\",\n        },\n\n        {\n            id: FieldDescriptions.Field_gateControl,\n            capabilities: {\n                canImportedFromExcel: true,\n                canBeUnsafe: true,\n                needsConfiguration: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: false,\n                canBeReadonly: true,\n                schema: \"IGate\",\n            },\n            label: \"Gate Control [gateControl]\",\n            class: \"all\",\n            help: \"a quality gate field\",\n        },\n\n        {\n            id: FieldDescriptions.Field_colorPicker,\n            capabilities: {\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: true,\n                canBePublished: true,\n                canBeReadonly: true,\n                canRequireContent: true,\n            },\n            label: \"Color picker [colorPicker]\",\n            class: \"super\",\n            help: \"a color picker field\",\n        },\n\n        {\n            id: FieldDescriptions.Field_steplist,\n            capabilities: {\n                needsConfiguration: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: true,\n                canBeReadonly: true,\n                canBeUnsafe: true,\n                schema: \"IFieldParameter\",\n            },\n            label: \"Table Control [steplist]\",\n            class: \"all\",\n            help: \"a field rendered as a table\",\n        },\n\n        // toolbar\n        {\n            id: FieldDescriptions.Field_labels,\n            capabilities: {\n                onlyOne: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Labels [labels]\",\n            class: \"toolbar\",\n            help: \"shows defined labels in the item's tool bar\",\n        },\n        {\n            id: FieldDescriptions.Field_workflow,\n            capabilities: {\n                onlyOne: true,\n                canBeUsedInDocs: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"One2One Issue Mapping [workflow]\",\n            class: \"toolbar\",\n            help: \"a field shown in the item's tool bar showing the status of an external ticket (i.e. jira)\",\n        },\n\n        // tests and xtcs\n        {\n            id: FieldDescriptions.Field_test_steps,\n            capabilities: {\n                canBeUnsafe: true,\n                onlyOne: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Test Table [test_steps]\",\n            class: \"tests\",\n            help: \"a special table control to define tests (see test configuration)\",\n        },\n        {\n            id: FieldDescriptions.Field_test_steps_result,\n            capabilities: {\n                canBeUnsafe: true,\n                onlyOne: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Test Result Table [test_steps_result]\",\n            class: \"xtcs\",\n            help: \"a special table control to define tests with results (see test configuration)\",\n        },\n        {\n            id: FieldDescriptions.Field_test_result,\n            capabilities: {\n                canImportedFromExcel: true,\n                onlyOne: true,\n                canHideInDoc: true,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Test Result Summary [test_result]\",\n            class: \"xtcs\",\n            help: \"a special field to compute or specify the overall test result\",\n        },\n\n        // agile sync\n        {\n            id: FieldDescriptions.Field_syncStatus,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"SYNC Status [syncStatus]\",\n            class: \"sync\",\n            help: \"control to hold the information about synced external items \",\n        },\n        {\n            id: FieldDescriptions.Field_syncSourceInfo,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"SYNC Source Info [syncSourceInfo]\",\n            class: \"sync\",\n            help: \"a control to show control syncing of external items\",\n        },\n\n        // beta should not be used really\n        {\n            id: FieldDescriptions.Field_report,\n            capabilities: { canHideInDoc: false, canBeXtcPreset: false, canBePublished: false, canBeReadonly: true },\n            label: \"Embedded Report [report]\",\n            class: \"beta\",\n            help: \"allows to embed a standard report\",\n        },\n        {\n            id: FieldDescriptions.Field_cascadingSelect,\n            capabilities: { canHideInDoc: false, canBeXtcPreset: true, canBePublished: true, canBeReadonly: true },\n            label: \"Cascading Select [cascadingSelect]\",\n            class: \"beta\",\n            help: \"a field to select values from hierachies of drop downs\",\n        },\n\n        // technical - these need to be added once when creating a new DOC category or something special like this\n        {\n            id: FieldDescriptions.Field_reportId,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"report ID [reportId]\",\n            class: \"super\",\n            help: \"contains the id of the xslt template for reports\",\n        },\n        {\n            id: FieldDescriptions.Field_filter_file,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"filter_file [filter_file]\",\n            class: \"super\",\n            help: \"internal field required for documents\",\n        },\n        {\n            id: FieldDescriptions.Field_signature,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Signature Table [signature]\",\n            class: \"super\",\n            help: \"field showing signature in documents\",\n        },\n        {\n            id: FieldDescriptions.Field_signatureControl,\n            capabilities: {\n                onlyOne: true,\n                canHideInDoc: false,\n                canBeXtcPreset: false,\n                canBePublished: false,\n                canBeReadonly: true,\n            },\n            label: \"Signature Password Field [signatureControl]\",\n            class: \"super\",\n            help: \"field with control for signatures\",\n        },\n    ];\n\n    static setValidationFunction(fieldId: string, validator: JsonEditorValidation) {\n        let fieldDesc = FieldDescriptions.findById(fieldId);\n        if (!fieldDesc) {\n            throw new Error(`No such field type ${fieldId} registered`);\n        }\n        fieldDesc.capabilities.validationFunction = validator;\n    }\n}\n","import { IDB } from \"./DBCache\";\nimport { IControlDefinition, IBooleanMap, IStringMap, IItem, matrixSession } from \"./../../globals\";\nimport type { IItemControlOptions } from \"../UI/Components/index\";\nimport type { IBaseControlOptions } from \"../UI/Controls/BaseControl\";\nimport type { IFieldDescription, IFieldParameter } from \"../../ProjectSettings\";\nimport { XRGetProject_StartupInfo_ListProjectAndSettings } from \"../../RestResult\";\nimport { IDashboardParametersBase } from \"./FieldHandlers/Document/IDashboardParametersBase\";\nimport { ReactElement } from \"react\";\n\nexport type { IPlugin, ISettingPage, IProjectPageParam, IPluginControl, IPluginPanelOptions };\nexport { PluginManager, plugins };\nexport { pluginHooks };\nexport { InitializePluginManager };\n\ninterface IPlugin {\n    initItem?: (item: IItem, jui: JQuery) => void;\n    initServerSettings?: (serverSettings: XRGetProject_StartupInfo_ListProjectAndSettings) => void;\n    updateMenu?: (ul: JQuery, hook: number) => void;\n\n    /**\n     * Returns true if the plugin offers a control that can display fields of type {fieldType}.\n     */\n    supportsControl?: (fieldType: string) => boolean;\n    createControl?: (ctrlObj: JQuery, settings: IBaseControlOptions) => void;\n    initProject?: (project: string) => void;\n    isDefault?: boolean;\n    filterProject?: (db: IDB[]) => void;\n    updateSearchPanel?: () => void;\n    updateItemPanel?: () => void;\n    updateItem?: (item: IItem) => void;\n    getProjectPagesAsync?: () => Promise<IProjectPageParam[]>;\n    preSaveHookAsync?: (isItem: boolean, type: string, controls: IControlDefinition[]) => Promise<{}>;\n    renderActionButtons?: (options: IItemControlOptions, body: JQuery, controls: IControlDefinition[]) => boolean;\n    updateTree?: () => void;\n\n    // admin\n    getFieldConfigOptions?: () => IFieldDescription[];\n    addFieldSettings?: (\n        configApp: any,\n        project: string,\n        pageId: string,\n        fieldType: string,\n        fieldParams: IFieldParameter,\n        ui: JQuery,\n        paramChanged: () => void,\n        canBePublished?: boolean,\n    ) => void;\n    getProjectSettingPagesAsync?: () => Promise<ISettingPage[]>;\n    getCustomerSettingPagesAsync?: () => Promise<ISettingPage[]>;\n    getPluginName?: () => string;\n    getPluginVersion?: () => string;\n    categorySetting?: (key: string) => string;\n    editCategorySetting?: (key: string, category: string) => void;\n    helpUrl?: string;\n    initPrintingAsync?: () => Promise<void>;\n\n    /**\n     * Returns a list of TinyMCE menu items to be added to the editor.\n     * @param editor\n     */\n    getTinyMenuItems?(editor: any): ITinyMenu[];\n\n    /**\n     * Returns a list of menu items to be added to the user profile menu in the main app.\n     */\n    getUserMenuItems?(): IPluginMenuAction[];\n\n    /**\n     * Returns a list of menu items to be added to the user profile menu of the config page.\n     */\n    getConfigUserMenuItems?(): IPluginMenuAction[];\n\n    /**\n     * Returns a list of menu items to be added to the project list.\n     */\n    getProjectMenuItems?(): IPluginMenuAction[];\n\n    /**\n     * Returns a list of custom searches to be added to the search drowpdown.\n     */\n    getCustomSearches?(): IPluginSearch[];\n\n    /**\n     * Returns a list of menu items to be added to the QMS user profile menu in the liveqms.\n     */\n    getQMSUserMenuItems?(): IPluginMenuAction[];\n\n    /**\n     *  Notify the plugin to render itself in the element passed.\n     */\n    renderTile?: (analyticsContainer: HTMLElement) => void;\n}\n\nexport interface IPluginHooks {\n    shares: number;\n}\n\nlet pluginHooks: IPluginHooks;\npluginHooks = { shares: 0 };\n\ninterface ISettingPage {\n    id: string;\n    title: string;\n    type?: string;\n    help?: string;\n    externalHelp?: string;\n    render: (ui: JQuery) => void;\n    advanced?: () => void;\n    del?: () => void;\n    saveAsync?: () => JQueryDeferred<unknown>;\n    getNode?: () => IDB;\n}\n\ninterface IProjectPageParam {\n    id: string; // the id\n    title: string; // the title\n    render: any; // function to call when the user clicks on icon\n    destroy?: any; // function to call when the user clicks away\n    folder?: string; // folder in which to appear - TOOLS by default\n    order: number; // higher number further down\n    folderTitle?: string; // if the folder does not exists it will be created using this title\n    icon?: string; // optional icon\n    usesFilters: boolean; // if set to true the page uses filters so the control will be enabled\n}\ninterface IPluginControl {\n    [key: string]: Function;\n}\n\nexport interface IPluginCoreForDashboard<DASHBOARDPARAMS extends IDashboardParametersBase> {\n    getDashboardAsync(): Promise<IDashboardPage<DASHBOARDPARAMS>>;\n    getConfig(): IPluginConfigForDashboard;\n}\nexport interface IPluginConfigForDashboard {\n    dashboard: IPluginFeatureDashboard;\n}\n\nexport interface IDashboardPage<T extends IDashboardParametersBase> {\n    renderProjectPage(): void;\n    renderProjectPageWithParams?(params: T, interactive: boolean): Promise<JQuery>;\n    onResize(): void;\n}\n\nexport interface IPluginFeatureBase {\n    /** Whether to show the page */\n    enabled: boolean;\n    /** Id of the page in the tree/url */\n    id?: string;\n    /** Title of the page in the tree and of the page when displayed */\n    title?: string;\n}\n\n/** interface for the value to be stored by custom field */\nexport interface IPluginFieldValueBase {\n    /**\n     *  html to be rendered to support the field printing outside of custom section\n     */\n    html: string;\n    /**\n     * value to be stored and used by the control\n     */\n    value: unknown;\n}\nexport interface IPluginFeatureDashboard extends IPluginFeatureBase {\n    /** Icon of the dashboard (See font awesome) */\n    icon: string;\n    /** Parent of the dashboard (It should exists)) */\n    parent: string;\n    /** Whether using filter when searching.*/\n    usefilter: boolean;\n    /** Order in the tree */\n    order: number;\n}\n\nexport interface ITinySubMenuItem {\n    type: string;\n    text: string;\n    onAction: () => void;\n}\nexport interface ITinyMenuItem {\n    text: string;\n    getSubmenuItems: () => ITinySubMenuItem[];\n}\nexport interface ITinyMenu {\n    id: string;\n    menuItem: ITinyMenuItem;\n}\n\n/** Server setting for plugin.\n *\n * This you can use to save setting on an instance level (for all projects)\n * The user can edit these in the admin through the Server Setting Page\n */\nexport interface IServerSettingsBase {}\n\n/** Project setting for plugin\n *\n * This you can use to save setting for one specific project.\n * The user can edit these in the admin through the Project Setting Page\n */\nexport interface IProjectSettingsBase {\n    /**  This will contains the a project settings */\n}\n\ninterface IPluginPanelOptions {\n    type: string;\n    control: JQuery;\n    controlState: number;\n}\n\nexport interface IPluginSearch {\n    menu: string;\n    search: (selectItems: (selectedItems: string[]) => void) => Promise<void>;\n}\n\nexport interface IPluginMenuAction {\n    icon: string;\n    title: string;\n    action: () => Promise<void>;\n}\n\nclass PluginManager {\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    private _jui: JQuery; // div for popups\n    private _plugins: IPlugin[] = [];\n    private controls: IPluginControl = {};\n    private destructors: IPluginControl = {};\n    private titles: IStringMap = {};\n    private usesFilters: IBooleanMap = {};\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    private activeControlPage: string;\n\n    /** Called by the main UI handing over a div which can be used inside a plugin\n     * to display modal popups\n     *\n     * @param {jquery object} jui a $(\"<div />\") object\n     * @returns {undefined}\n     */\n    setUI(jui: JQuery): void {\n        this._jui = jui;\n    }\n\n    /** function to register a plugin for a specific menu (specified by the hook)\n     *\n     * @param {instance of plugin} plugin\n     * @returns {undefined}\n     */\n    register(plugin: IPlugin): void {\n        this._plugins.push(plugin);\n    }\n\n    /** this method is called from the main UI whenever an item is selected to be\n     * displayed. The information is forwarded to all plugins\n     *\n     * @param {json object} item for example a requirement. see the json documention of item types\n     * @returns {undefined}\n     */\n    init(item: IItem): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].initItem) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].initItem(item, this._jui);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to init for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    async initPrinting() {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].initPrintingAsync) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    await this._plugins[idx].initPrintingAsync();\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to initPrinting for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    /** this method is called after connecting to server using getServer (\"\")\n     *\n     * @param {json serverSettings} serverSettings or null after unsucessful login\n     * @returns {undefined}\n     */\n    initServerSettings(serverSettings?: XRGetProject_StartupInfo_ListProjectAndSettings): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].initServerSettings) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].initServerSettings(serverSettings);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.log(\"error \" + e.toString());\n            }\n        }\n    }\n\n    /** this method is called when creating a menu which has a hook. it allows the plugins to add\n     * li's to the ul supplied\n     *\n     * @param {number} hook identifies the menu\n     * @param {jquery object} ul  a $(\"<ul />) object\n     * @returns {undefined}\n     */\n    updateMenu(hook: number, ul: JQuery): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].updateMenu) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].updateMenu(ul, hook);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to updateMenu for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    getFieldConfigOptions(): IFieldDescription[] {\n        let fco: IFieldDescription[] = [];\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].getFieldConfigOptions && this._plugins[idx].supportsControl) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    const fieldConfig = this._plugins[idx].getFieldConfigOptions();\n                    for (let i = 0; i < fieldConfig.length; i++) {\n                        // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                        if (this._plugins[idx].supportsControl(fieldConfig[i].id)) {\n                            fco.push(fieldConfig[i]);\n                        }\n                    }\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getFieldConfigOptions for plugin : \" + e.toString());\n            }\n        }\n        return fco;\n    }\n    addFieldSettings(\n        configApp: any,\n        project: string,\n        pageId: string,\n        fieldType: string,\n        fieldParams: IFieldParameter,\n        ui: JQuery,\n        paramChanged: () => void,\n        canBePublished?: boolean,\n    ) {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].addFieldSettings) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].addFieldSettings(\n                        configApp,\n                        project,\n                        pageId,\n                        fieldType,\n                        fieldParams,\n                        ui,\n                        () => paramChanged(),\n                        canBePublished,\n                    );\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to addFieldSettings for plugin : \" + e.toString());\n            }\n        }\n    }\n    supportsControl(fieldType: string): boolean {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                if (this._plugins[idx].supportsControl && this._plugins[idx].supportsControl(fieldType)) {\n                    return true;\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to supportsControl for plugin : \" + e.toString());\n            }\n        }\n        return false;\n    }\n\n    createControl(ctrlObj: JQuery, settings: IBaseControlOptions): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                if (this._plugins[idx].supportsControl && this._plugins[idx].supportsControl(settings.fieldType)) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].createControl(ctrlObj, settings);\n                    return;\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to createControl for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    initProject(project: string): void {\n        // delete all non default plugins === custom\n        for (let idx = this._plugins.length - 1; idx >= 0; idx--) {\n            if (!this._plugins[idx].isDefault) {\n                this._plugins.splice(idx, 1);\n            }\n        }\n\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].initProject) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].initProject(project);\n                }\n            } catch (e) {\n                //Display error message to user in the console.\n                console.error(e);\n            }\n        }\n        this.initPrinting();\n    }\n\n    // to modify db tree after it has been created\n    filterProject(db: IDB[]): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].filterProject) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].filterProject(db);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to filterProject for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    // to modify search panel on left after it has been rendered\n    updateSearchPanel(): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].updateSearchPanel) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].updateSearchPanel();\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to updateSearchPanel for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    // to modify item on left after it has been rendered\n    updateItemPanel(): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].updateItemPanel) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].updateItemPanel();\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to updateItemPanel for plugin : \" + e.toString());\n            }\n        }\n    }\n\n    // notify plugins that links of item changed\n    updateItem(updates: IItem): void {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].updateItem) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].updateItem(updates);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to updateItem for plugin : \" + e.toString());\n            }\n        }\n    }\n    updateTree() {\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].updateTree) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    this._plugins[idx].updateTree();\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to updateTree for plugin : \" + e.toString());\n            }\n        }\n\n        return;\n    }\n\n    getTinyMenus(editor: any): ITinyMenu[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getTinyMenuItems) {\n                    let menuItems = plugin.getTinyMenuItems(editor);\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getTinyMenus for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    getCustomSearches(): IPluginSearch[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getCustomSearches) {\n                    let menuItems = plugin.getCustomSearches();\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getCustomSearches for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    getUserMenuItems(): IPluginMenuAction[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getUserMenuItems) {\n                    let menuItems = plugin.getUserMenuItems();\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getUserMenuItems for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    getQMSUserMenuItems(): IPluginMenuAction[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getQMSUserMenuItems) {\n                    let menuItems = plugin.getQMSUserMenuItems();\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getQMSUserMenuItems for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    getConfigUserMenuItems(): IPluginMenuAction[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getConfigUserMenuItems) {\n                    let menuItems = plugin.getConfigUserMenuItems();\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getConfigUserMenuItems for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    getProjectMenuItems(): IPluginMenuAction[] {\n        let list = [];\n        for (let plugin of this._plugins) {\n            try {\n                if (plugin.getProjectMenuItems) {\n                    let menuItems = plugin.getProjectMenuItems();\n                    if (menuItems && menuItems.length > 0) list.push(...menuItems);\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getProjectMenuItems for plugin : \" + e.toString());\n            }\n        }\n        return list;\n    }\n\n    async getProjectPages(): Promise<IProjectPageParam[]> {\n        let that = this;\n\n        let allPages: IProjectPageParam[] = [];\n\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].getProjectPagesAsync) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    let pages = await this._plugins[idx].getProjectPagesAsync();\n                    for (let page of pages) {\n                        allPages.push(page);\n                        that.controls[\"_\" + page.id] = page.render;\n                        that.destructors[\"_\" + page.id] = page.destroy;\n                        that.titles[\"_\" + page.id] = page.title;\n                        that.usesFilters[\"_\" + page.id] = page.usesFilters;\n                    }\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to getProjectPages for plugin : \" + e.toString());\n            }\n        }\n        return allPages;\n    }\n    /**\n     * Return a list of plugins that can be displayed in the dashboard analytics page.\n     * */\n    getAllTilePlugins() {\n        let tiles: IPlugin[] = [];\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            if (this._plugins[idx].renderTile) {\n                let tile = this._plugins[idx];\n                tiles.push(tile);\n            }\n        }\n        return tiles;\n    }\n\n    supportsControlPage(controlType: string): boolean {\n        return !!this.controls[controlType];\n    }\n\n    createControlPage(options: IPluginPanelOptions, toggleFilters?: (toggle: boolean) => void): void {\n        options.control.html(\"\");\n\n        document.title = this.titles[options.type] + \" - \" + matrixSession.getProject();\n        if (this.usesFilters[options.type]) {\n            // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n            toggleFilters(true);\n        } else {\n            // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n            toggleFilters(false);\n        }\n        this.activeControlPage = options.type;\n        this.controls[options.type](options);\n    }\n\n    destroyActiveControlPage(): void {\n        if (this.activeControlPage) {\n            try {\n                const destructor = this.destructors[this.activeControlPage];\n                if (destructor) {\n                    destructor();\n                }\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                this.activeControlPage = null;\n            } catch (e) {\n                console.error(\"Error removing control page\", e);\n            }\n        } else {\n            // console.log(\"No active control page\");\n        }\n    }\n\n    callPreSaveHook(isItem: boolean, type: string, controls: IControlDefinition[]): JQueryDeferred<{}> {\n        let that = this;\n        function callRec(idx: number): JQueryDeferred<{}> {\n            let res = $.Deferred();\n            if (idx >= that._plugins.length) {\n                res.resolve();\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                return res;\n            }\n            if (that._plugins[idx].preSaveHookAsync) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                that._plugins[idx]\n                    .preSaveHookAsync(isItem, type, controls)\n                    .then(function () {\n                        callRec(idx + 1)\n                            .done(function () {\n                                res.resolve();\n                            })\n                            .fail(function () {\n                                res.reject();\n                            });\n                    })\n                    .catch(function () {\n                        callRec(idx + 1).always(function () {\n                            res.reject();\n                        });\n                    });\n            } else {\n                callRec(idx + 1)\n                    .done(function () {\n                        res.resolve();\n                    })\n                    .fail(function () {\n                        res.reject();\n                    });\n            }\n            // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n            return res;\n        }\n        return callRec(0);\n    }\n\n    // return true for handled, false for not  handled\n    renderActionButtons(options: IItemControlOptions, body: JQuery, controls: IControlDefinition[]): boolean {\n        let done = false;\n        for (let idx = 0; idx < this._plugins.length; idx++) {\n            try {\n                if (this._plugins[idx].renderActionButtons) {\n                    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                    if (this._plugins[idx].renderActionButtons(options, body, controls)) {\n                        done = true;\n                    }\n                }\n            } catch (e) {\n                // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n                console.error(\"error: Fail to renderActionButtons for plugin : \" + e.toString());\n            }\n        }\n        // return true if at least on plugin is owner\n        return done;\n    }\n\n    /******************** admin function  */\n\n    getPlugins() {\n        return this._plugins;\n    }\n}\n\nlet plugins: PluginManager;\n\nfunction InitializePluginManager() {\n    plugins = new PluginManager(); // plugin manager\n    // @ts-ignore TODO: get rid of globals\n    globalThis.plugins = plugins;\n    // @ts-ignore TODO: get rid of globals\n    globalThis.pluginHooks = pluginHooks;\n}\n","import { MatrixSession } from \"./common/businesslogic/index\";\nimport { JsonValidator } from \"../jsonvalidation/JsonValidator\";\nimport { ItemConfiguration } from \"./common/businesslogic/index\";\nimport { Application } from \"./common/UI/Application\";\nimport { RestConnector } from \"./common/businesslogic/index\";\nimport { XRCrossProjectLink, XRTrimLink, XRCategoryAndRoot } from \"./RestResult\";\n\nimport { IApp } from \"./common/matrixlib/MatrixLibInterfaces\";\n\nexport type {\n    Admin,\n    MatrixReq,\n    Error,\n    IControlDefinition,\n    IGenericMap,\n    IAnyMap,\n    IStringMap,\n    IItemGetMap,\n    INumberStringMap,\n    IStringNumberMap,\n    IBooleanMap,\n    IStringStringArrayMap,\n    IStringJQueryMap,\n    IJsonSetting,\n    IRestParam,\n    IRestResult,\n};\nexport type {\n    IReference,\n    IItemIdParts,\n    IReferenceChange,\n    IEmail,\n    IDevice,\n    ISize,\n    IItem,\n    ILink,\n    IItemGet,\n    IItemPut,\n    IItemHistory,\n    IDataStorage,\n};\nexport { ControlState, globalMatrix };\nexport { matrixSession, restConnection, app, matrixApplicationUI };\nexport { setIC, setMatrixSession, setRestConnection, setMatrixApplicationUI, setApp };\nexport { InstallLegacyAdaptor };\n\n// TODO(modules) why are these 2 interfaces here? To solve some type error elsewhere?\ninterface Admin {}\ninterface MatrixReq {}\n\ninterface Error {\n    name: string;\n    message: string;\n}\ninterface IControlDefinition {\n    name?: string;\n    control?: JQuery;\n    fieldId?: number;\n    isDhfType?: boolean;\n\n    /**\n     * fieldType is set if this control supports displaying a particular kind of field.\n     * See FieldDescriptions for a list of many of the field types.\n     */\n    fieldType?: string;\n}\n\n// helper to allow things like x={}; x[y] = 1\ninterface IGenericMap {\n    [key: string]: any;\n}\ninterface IAnyMap {\n    [key: string]: any;\n}\ninterface IStringMap {\n    [key: string]: string;\n}\ninterface IItemGetMap {\n    [key: string]: IItemGet;\n}\ninterface INumberStringMap {\n    [key: number]: string;\n}\ninterface IStringNumberMap {\n    [key: string]: number;\n}\ninterface IBooleanMap {\n    [key: string]: boolean;\n}\ninterface IStringStringArrayMap {\n    [key: string]: string[];\n}\ninterface IStringJQueryMap {\n    [key: string]: JQuery;\n}\n\ninterface IJsonSetting {\n    id: string;\n    value: any;\n}\n\ninterface IRestParam extends Object {\n    td?: number;\n    reason?: string;\n    filter?: string;\n    [key: string]: any;\n}\ntype IRestResult = {} | string;\n\nexport class GlobalMatrix {\n    // these should go once everything is converted...\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    verbose: boolean;\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    ItemConfig: ItemConfiguration;\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    PopulateProjects: Function; // exists only in admin client\n\n    mobileApp: {\n        Login: Function;\n        ShowLoginScreen: Function;\n        ShowMobileUI: Function;\n    }; // exists only in mobile app\n    jiraPlugin: any; // jira cloud plugin\n\n    // declare var EmbeddedReport:any;\n    Admin: any;\n\n    doc: any; // no idea used in ContextFrames..\n\n    ITEM_DOES_NOT_EXIST: string;\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixRestUrl: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixBaseUrl: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixWfgw: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixExpress: boolean; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixProduct: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    matrixUniqueSerial: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    mxOauth: string; // delivered by server\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    mxOauthLoginUrl: string; // delivered by server\n\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    serverStorage: IDataStorage; // keeps information in local client storage per server\n\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    projectStorage: IDataStorage; // keeps information in local client storage per project\n\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    wfgwConnection: RestConnector; // global plugin rest connection\n\n    globalShiftDown: boolean;\n    globalCtrlDown: boolean;\n\n    // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n    jsonValidator: JsonValidator;\n\n    // filter for activity stream / calendar\n    historyFilter;\n    // legacy,js\n    EmbeddedReport: any;\n\n    constructor() {\n        this.ITEM_DOES_NOT_EXIST = \"\";\n        this.globalShiftDown = false;\n        this.globalCtrlDown = false;\n        this.historyFilter = \"merge,delete,undelete,add,edit,execute,reviewed,signature,report,touch,release\";\n        // @ts-ignore TODO: MATRIX-6934: nullStrictCheck should be fixed for next line\n        this.mobileApp = undefined;\n    }\n\n    installLegacyAdaptor() {\n        // @ts-ignore have to live with it for now\n        globalThis.ITEM_DOES_NOT_EXIST = this.ITEM_DOES_NOT_EXIST;\n        // @ts-ignore have to live with it for now\n        globalThis.matrixRestUrl = this.matrixRestUrl;\n        // @ts-ignore have to live with it for now\n        globalThis.matrixBaseUrl = this.matrixBaseUrl;\n        // @ts-ignore have to live with it for now\n        globalThis.matrixWfgw = this.matrixWfgw;\n        // @ts-ignore have to live with it for now\n        globalThis.matrixExpress = this.matrixExpress;\n        // @ts-ignore have to live with it for now\n        globalThis.matrixProduct = this.matrixProduct;\n        // @ts-ignore have to live with it for now\n        globalThis.mxOauth = this.mxOauth;\n        // @ts-ignore have to live with it for now\n        globalThis.mxOauthLoginUrl = this.mxOauthLoginUrl;\n\n        // @ts-ignore have to live with it for now\n        globalThis.serverStorage = this.serverStorage;\n        // @ts-ignore have to live with it for now\n        globalThis.projectStorage = this.projectStorage;\n        // @ts-ignore have to live with it for now\n        globalThis.wfgwConnection = this.wfgwConnection;\n\n        // @ts-ignore have to live with it for now\n        globalThis.globalShiftDown = this.globalShiftDown;\n        // @ts-ignore have to live with it for now\n        globalThis.globalCtrlDown = this.globalCtrlDown;\n\n        // @ts-ignore have to live with it for now\n        globalThis.jsonValidator = this.jsonValidator;\n    }\n}\n\nconst globalMatrix: GlobalMatrix = new GlobalMatrix();\n\nfunction setIC(newIC: ItemConfiguration) {\n    globalMatrix.ItemConfig = newIC; // To use in matrixSdk\n    // @ts-ignore have to live with it for now\n    globalThis.IC = newIC; // legacy support\n}\nlet matrixSession: MatrixSession;\nfunction setMatrixSession(session: MatrixSession) {\n    matrixSession = session;\n}\nlet restConnection: RestConnector; // global rest connection\nfunction setRestConnection(rc: RestConnector) {\n    restConnection = rc;\n}\nlet matrixApplicationUI: Application; // the application\nfunction setMatrixApplicationUI(ui: Application) {\n    matrixApplicationUI = ui;\n}\n\n// TODO(modules): app was declared as interface MatrixReq, which is empty, and then usually\n// assigned to a variable of type businesslogic/UI/MatrixReq. We just opt out of typing for\n// this variable and ideally we should fix that with a real interface. I changed the type to\n// any to make the true situation easier to see.\nlet app: IApp; // main application\nfunction setApp(newApp: any) {\n    app = newApp;\n}\n\n// type JQuery = any;\n\n// global interfaces by matrix\ninterface IReference {\n    projectShortLabel?: string;\n    to: string;\n    title: string;\n    modDate?: string;\n    isIndirect?: boolean;\n}\ninterface IItemIdParts {\n    id: string;\n    version: number;\n    type: string;\n    isFolder: boolean;\n    url: string;\n    link: string;\n    linkv: string;\n    number: number;\n}\ninterface IReferenceChange {\n    action: string;\n    fromId: string;\n    toId: string;\n}\n\ninterface IEmail {\n    summary: string;\n    description: string;\n    matrixProject: string;\n    matrixItem: string;\n    browser: string;\n    log: string;\n    email?: string;\n}\ninterface IDevice {\n    screen: ISize;\n    viewport: ISize;\n}\ninterface ISize {\n    width: number;\n    height: number;\n}\n\n// TODO: type properly\ninterface IItem {\n    upLinks?: IReference[];\n    upLinkList?: XRTrimLink[];\n    downLinks?: IReference[];\n    children?: IItem[];\n    history?: IItemHistory[];\n    modDate?: string;\n    isUnselected?: number;\n    availableFormats?: string[];\n    selectSubTree?: XRCategoryAndRoot[];\n    requireSubTree?: XRCategoryAndRoot[];\n    icon?: string;\n    type?: string;\n    id?: string;\n    title?: string;\n    linksUp?: string;\n    linksDown?: string;\n    isFolder?: boolean;\n    isDeleted?: boolean;\n    maxVersion?: number;\n    docHasPackage?: boolean;\n\n    [key: string]: any;\n}\n\n// a link from one item to another item\ninterface ILink {\n    from: string;\n    to: string;\n}\n\ninterface IItemGet extends IItem {\n    labels?: string[];\n    crossLinks?: XRCrossProjectLink[];\n}\ninterface IItemPut extends IItem {\n    labels?: string;\n    onlyThoseFields?: number;\n    onlyThoseLabels?: number;\n}\n\ninterface IItemHistory {\n    action: string;\n    user: string;\n    dateUserFormat: string;\n    comment: string;\n    id: string;\n    version: number;\n    date: string;\n    title: string;\n    deletedate?: string;\n}\n\ninterface IDataStorage {\n    setItem: (itemKey: string, itemVal: string, sanitize?: boolean) => void;\n    getItem: (itemKey: string, dontSanitize?: boolean) => string;\n    getItemDefault: (itemKey: string, defaultValue: string) => string;\n}\n\nenum ControlState {\n    FormEdit = 0, //this is a embedded form which allows the user to modify the content\n    FormView, //this is read only version with (some) read only tools enabled (e.g. history)\n    DialogCreate, //this allows the user to modify the content, usually to create new elements. No tools\n    HistoryView, //is a read only version, e.g. used for the history where smart text and smart link is not resolved\n    Tooltip, // most things will not shown as tooltip...\n    Print, // for printing ...\n    Report, // special to render report into page\n    DialogEdit, // between FormEdit and DialogCreate to edit an item in popup\n    Review, // special mode for design reviews\n}\n\n// This is so that old legacy scripts can \"just work\" to a degree.\nfunction InstallLegacyAdaptor() {\n    // @ts-ignore have to live with it for now\n    globalThis.ControlState = ControlState;\n    // @ts-ignore have to live with it for now\n    globalThis.IC = globalMatrix.ItemConfig;\n    // @ts-ignore have to live with it for now\n    globalThis.matrixSession = matrixSession;\n    // @ts-ignore have to live with it for now\n    globalThis.restConnection = restConnection;\n    // @ts-ignore have to live with it for now\n    globalThis.app = app;\n    // @ts-ignore have to live with it for now\n    globalThis.matrixApplicationUI = matrixApplicationUI;\n    globalMatrix.installLegacyAdaptor();\n    // @ts-ignore have to live with it for now\n    globalThis.applyResponsiveView = applyResponsiveView;\n}\n\nexport function applyResponsiveView() {\n    let mobileView = localStorage.getItem(\"mobileLayout\");\n    let x = $(window).width();\n    if (mobileView) {\n        $(\"#contextframesizer\").css(\"display\", \"none\");\n        $(\"#dragbar\").css(\"display\", \"none\");\n        $(\"#sidebar\").css(\"max-width\", \"none\");\n    }\n    if (mobileView == \"0\") {\n        // see item\n        $(\"#sidebar\").css(\"display\", \"none\");\n        $(\"#navLeft\").css(\"display\", \"none\");\n        $(\"#main\").css(\"display\", \"block\");\n    } else if (mobileView == \"1\") {\n        // see navigation tree\n        $(\"#sidebar\").css(\"width\", x).css(\"display\", \"block\");\n        $(\"#main\").css(\"display\", \"none\");\n        $(\"#navLeft\").css(\"display\", \"\");\n    } else if (mobileView == \"2\") {\n        // see both\n        $(\"#sidebar\").css(\"width\", x / 2 + \"px\");\n        $(\"#navLeft\").css(\"display\", \"\");\n        $(\"#main\").css(\"display\", \"block\");\n    } else {\n        // not mobile\n        $(\"#dragbar\").css(\"display\", \"block\");\n        $(\"#contextframesizer\").css(\"display\", \"block\");\n        $(\"#navLeft\").css(\"display\", \"\");\n        $(\"#main\").css(\"display\", \"block\");\n    }\n\n    app.resizeItem(true);\n}\n","export enum LineType {\n    textline = \"textline\",\n    id = \"id\",\n    uppercase = \"uppercase\",\n    number = \"number\",\n    select = \"select\",\n    table = \"table\",\n    json = \"json\",\n    color = \"color\",\n    id_ = \"id_\",\n    richtext = \"richtext\",\n    readonly = \"readonly\",\n    boolean = \"boolean\",\n    multiselect = \"multiselect\",\n    folderselect = \"folderselect\",\n    userAndGroupSelect = \"userAndGroupSelect\",\n}\n","/// <reference types=\"matrixrequirements-type-declarations\" />\nimport { ControlState, IReference } from \"../../../globals\";\nimport { IDB } from \"../../businesslogic/index\";\nimport { IBaseControlOptions } from \"../Controls/BaseControl\";\nimport { ITreeDropInfo } from \"../MainTree/MainTree\";\n\nexport type {\n    IProjectPanelControlOptions,\n    IVizMode,\n    IDelayedAction,\n    MyNodeData,\n    MyNode,\n    MyDDData,\n    MyFancytree,\n    MyFancytreeOption,\n};\nexport { SelectMode, SearchState, SearchUpdate };\n\ninterface IProjectPanelControlOptions extends IBaseControlOptions {\n    parameter?: {\n        readonly?: boolean; // can be set to overwrite the default readonly status\n        placeholder?: string;\n        maxItems?: number;\n        options?: any;\n    };\n    noAnimation?: boolean; // set to true not to anmite opening / closing of tree\n    dragAndDrop?: boolean;\n    controlState?: ControlState; // read only rendering\n    highlight?: boolean; // true: input should be highlighted in complete page\n    canFilter?: boolean; //  true: filter / search box should be shown\n    isConfigSearch?: boolean;\n    serverSearch?: boolean; // true: search server should be enabled: disabled only in admin client\n    expand?: number; //0, // minimum number of levels to expand\n    tree?: IDB[]; // tree in fancy tree style\n    tooltips?: boolean; // show tooltips if available\n    collectionChanged?: (count: number) => void;\n    selectionChanged?: (id: string) => void;\n    onExpand?: (id: string) => void; // optional callback, called when folder is opened\n    dropCallback?: (moveDetails: ITreeDropInfo) => boolean; // callback after node was dropped\n    crossProject?: string; // if tree is for another project\n\n    selectedItems?: IReference[]; // list of selected items,\n    selectMode?: SelectMode; // if and how items can be selected\n    glueToBottom?: boolean; // if set to true the tree will be as big as possible (e.g. for JIRA plugin)\n    isMainTree?: boolean; // set to true if this is the main tree on left\n    autoScroll?: boolean; // Scroll to selection, defaults to true\n}\nenum SelectMode {\n    /*** DO NOT CHANGED numbers use from baseControl */\n    none = 0, // cannot select\n    items = 1, // can select items (no folders)\n    folders = 2, // can select folders (no items)\n    singleItem = 3, // can select one item (no folders)\n    singleFolder = 4, // can select one folder (no items)\n    independent = 5, // can select folder and items (independently)\n    auto = 6, // if all children in folder are selected, selection changes to parent\n    independentAuto = 7, //  can select folder and items independently -> but when checking a folder it adds all children\n    autoPrecise = 8, //  if you select a folder it select everything within, if you unselect something it unselects all parents\n}\n\ninterface MyNodeData extends Fancytree.FancytreeNode {\n    cstrender?: boolean;\n    background?: string;\n    shortTitle?: string;\n    border?: string;\n    type?: string;\n    icon?: string;\n    hideCheckbox?: boolean;\n    isUnselected?: boolean;\n    extraStyle?: string;\n    classes?: string[];\n    mode?: string;\n}\ninterface MyNode extends Fancytree.FancytreeNode {\n    selected?: boolean;\n    unselectable?: boolean;\n    ul?: JQuery;\n    span?: JQuery;\n    type?: string;\n    subMatch?: boolean;\n    shortTitle?: string;\n}\ninterface MyDDData {\n    otherNode?: MyNode;\n    hitMode?: string;\n}\ninterface MyFancytree extends Fancytree.Fancytree {\n    options?: Fancytree.FancytreeOptions;\n}\ninterface MyFancytreeOption extends Fancytree.FancytreeOptions {\n    filter?: { mode?: string };\n}\n\nenum SearchState {\n    NoSearch = 0, // the whole tree is shown\n    FilterDone, // a local search (filter of the tree by title and id)\n    ServerRunning, // a search request was send to the server\n    ServerDone, // the search results returned\n}\nenum SearchUpdate {\n    inserted_node = 1, // called if a new node has been inserted\n    updated_rec, // called after TC have been executed on server, a whole subtree needs to be inserted\n    filter_status_changed, // called when label and therefore visibility is changed\n    title_changed, // the item's title was changed\n    item_dropped, // an item was draged and dropped to a new place (if this happens after creating it , it must be refreshed)\n}\ninterface IVizMode {\n    uid: string;\n    icon: string;\n    text: string;\n    mainTree: boolean;\n    asList: boolean;\n    hide: boolean;\n    check: boolean;\n    expand: boolean;\n}\n\ninterface IDelayedAction {\n    type: string;\n    expression: string;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { TodoTypes } from \"./common/enums\";\nimport { BaseWidget } from \"./common/BaseWidget\";\n\nimport { IProcessResult } from \"./../core/printinterface/PrintProcessorInterfaces\";\nimport { PrintProcessor } from \"../print/src/PrintProcessor\";\nimport { PrintProcessorRegistry } from \"../print/src/PrintProcessorRegistry\";\nimport { Category } from \"./objects/Category\";\nimport { DocItem } from \"./objects/DocItem\";\nimport { Field } from \"./objects/Field\";\nimport { Item } from \"./objects/Item\";\nimport { Project, IProjectContext } from \"./objects/Project\";\nimport { TreeFolder } from \"./objects/TreeFolder\";\n\nimport { IPluginFieldHandler, ControlCore, ControlCoreBase, IControlOptions } from \"./plugins/ControlCore\";\nimport { PluginCore } from \"./plugins/PluginCore\";\n\nimport { IReviewConfig, ITableReviewData, ReviewControlColumns } from \"./../core/client/plugins/ScheduleReviewDefines\";\nimport { AddFileAck, FolderAnswer, CopyItemAck, ExecuteParam } from \"./rest-api\";\nimport { ISimpleSessionControl, StandaloneMatrixSDK } from \"./serverSdk\";\nimport { ITitleAndId, IProjectNeeds } from \"./standalone-interfaces\";\nimport { MatrixSDK } from \"./client\";\n\nimport {\n    IPlugin,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    ISearchResult,\n    ISetField,\n    TestManager,\n    IExternalItem,\n    IItemChangeEvent,\n    IWltItemWithLinks,\n    Tasks,\n    IPluginHooks,\n    MatrixSession,\n    MR1Impl,\n    PluginManager,\n    IDB,\n    NotificationsBL,\n    ICategoryConfig,\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n    TableMath,\n} from \"../core/common/businesslogic\";\nimport { RiskCalculator, RiskControlImpl } from \"../core/common/UI/Controls/riskCtrl2\";\nimport type {\n    IRiskControlOptions,\n    IRiskParameter,\n    IRiskValue,\n    IRiskValueFactor,\n    IRiskValueFactorWeight,\n    IRiskValueMitigation,\n    IRiskValueMitigationChange,\n    IRiskValueMap,\n    IRiskRender,\n} from \"../core/common/UI/Controls/riskCtrl2\";\nimport { ItemConfiguration } from \"../core/common/businesslogic/ItemConfiguration\";\nimport { FieldDescriptions } from \"../core/common/businesslogic/FieldDescriptions\";\nimport { SectionDescriptions } from \"../core/common/businesslogic/FieldHandlers/Document/SectionDescriptions\";\n\nimport { IApp, IMatrix, IContextInformation, UIToolsConstants } from \"../core/common/matrixlib/MatrixLibInterfaces\";\nimport { SimpleItemTools } from \"../core/common/matrixlib/SimpleItemTools\";\n\nimport { Application } from \"../core/common/UI/Application\";\nimport { IBaseControlOptions, IBaseControl } from \"../core/common/UI/Controls/BaseControl\";\nimport { refLinkStyle, refLinkTooltip } from \"../core/common/UI/Parts/RefLinkDefines\";\nimport { IItemSelectionParams } from \"../core/common/UI/Controls/itemSelection\";\nimport { ILineEditorLine } from \"../core/common/UI/ILineEditor\";\nimport { LineType } from \"../core/common/UI/LineType\";\nimport {\n    IPublishInfo,\n    IPublished,\n    IToPublish,\n    IToPublishMap,\n    IPublicationGroup,\n    IDocTitle,\n    IPublicationHistory,\n    IPublicationHistoryItem,\n    INewPublication,\n} from \"../core/common/UI/Panels/PublishPanel\";\n\nimport {\n    IStringMap,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    IStringStringArrayMap,\n    IReference,\n    IAnyMap,\n    ControlState,\n    IDataStorage,\n    GlobalMatrix,\n} from \"../core/globals\";\n\nimport {\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRGetProject_Todos_GetTodosAck,\n    XRGetTodosAck,\n    XRProjectInfo,\n    XRTodo,\n    XRTodoCount,\n    XRTrimNeedle,\n    XRTrimNeedleItem,\n} from \"../core/RestResult\";\n\nimport { ProjectStorage } from \"../core/client/ProjectStorage\";\nimport { Notifications } from \"../core/client/plugins/Notifications\";\n\nimport {\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    IWidgetScope,\n} from \"../core/WidgetDashboard/WidgetPluginManager\";\nimport { WidgetPluginsConstants } from \"../core/WidgetDashboard/WidgetPluginsContainer\";\n\nimport {\n    IDropdownOption,\n    ILabel,\n    INotificationConfig,\n    IFieldParameter,\n    IContextPageConfigTab,\n} from \"../core/ProjectSettings\";\n\nimport { IConfigApp } from \"../core/admin/lib/IConfigApp\";\nimport { ConfigPage } from \"../core/admin/lib/ConfigPage\";\nimport { LineEditor } from \"../core/admin/lib/LinEditor\";\n\nimport { SelectMode } from \"../core/common/UI/Components/ProjectViewDefines\";\nimport { ItemSelectionTools } from \"../core/common/UI/Tools/ItemSelectionView\";\nimport { ReferenceTools } from \"../core/common/UI/Tools/ItemReferenceView\";\n\n// types and interfaces\nexport type {\n    IDashboardParametersBase,\n    IServerSettingsBase,\n    IProjectSettingsBase,\n    IPluginFeatureDashboard,\n    IDashboardPage,\n    IPluginFeatureBase,\n    IPluginFieldValueBase,\n    ITinyMenu,\n    IPluginMenuAction,\n    IPluginSearch,\n    IPluginFieldParameterBase,\n    IPluginFieldOptionsBase,\n    IPluginPrintParamsBase,\n    IPluginConfig,\n    IPluginFeature,\n    IPluginFeatureField,\n    IPluginSettingPage,\n    ITool,\n    IExternalPlugin,\n    IDashboardParameters,\n} from \"./plugins/interfaces\";\n\nexport type {\n    IProcessResult,\n    AddFileAck,\n    FolderAnswer,\n    CopyItemAck,\n    ExecuteParam,\n    ISetField,\n    IPluginFieldHandler,\n    ICategoryConfig,\n    IBaseControl,\n    TestManager,\n    IDataStorage,\n    IDB,\n    ILineEditorLine,\n    IDropdownOption,\n    IPlugin,\n    IStringMap,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    IWltItemWithLinks,\n    IBaseControlOptions,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    IStringStringArrayMap,\n    ISearchResult,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetTodosAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRTrimNeedleItem,\n    XRTodo,\n    XRTrimNeedle,\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    XRProjectInfo,\n    IReference,\n    ILabel,\n    IItemSelectionParams,\n    IAnyMap,\n    INotificationConfig,\n    IContextInformation,\n    IContextPageConfigTab,\n    XRTodoCount,\n    XRGetProject_Todos_GetTodosAck,\n    IItemChangeEvent,\n    IExternalItem,\n    IFieldParameter,\n    IConfigApp,\n    IProjectContext,\n    IControlOptions,\n    ISimpleSessionControl,\n    ITitleAndId,\n    IProjectNeeds,\n    ITableReviewData,\n    IReviewConfig,\n    IPublishInfo,\n    IPublished,\n    IToPublish,\n    IToPublishMap,\n    IPublicationGroup,\n    IDocTitle,\n    IPublicationHistory,\n    IPublicationHistoryItem,\n    INewPublication,\n};\n\n// classes\nexport type {\n    ReferenceTools,\n    PrintProcessor,\n    UIToolsConstants,\n    SectionDescriptions,\n    IWidgetScope,\n    ProjectStorage,\n    WidgetPluginsConstants,\n    refLinkStyle,\n    refLinkTooltip,\n    ControlState,\n    ItemConfiguration,\n    Notifications,\n    Tasks,\n    ControlCore,\n    ControlCoreBase,\n    PluginCore,\n    LineEditor,\n    ConfigPage,\n    NotificationsBL,\n    TodoTypes,\n    Item,\n    Field,\n    Project,\n    BaseWidget,\n    Category,\n    DocItem,\n    TreeFolder,\n    StandaloneMatrixSDK,\n    SimpleItemTools,\n};\n\n// handlers\nexport type {\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n};\n\n// risks control\nexport type {\n    IRiskControlOptions,\n    IRiskParameter,\n    IRiskValue,\n    IRiskValueFactor,\n    IRiskValueFactorWeight,\n    IRiskValueMitigation,\n    IRiskValueMitigationChange,\n    IRiskValueMap,\n    IRiskRender,\n    RiskCalculator,\n    RiskControlImpl,\n};\n\n// Enums need to be exported fully, \"export type\" isn't sufficient.\nexport { SelectMode, ReviewControlColumns, FieldDescriptions, LineType };\n\nexport interface ClientMatrixSdk {\n    plugins: PluginManager;\n    globalMatrix: GlobalMatrix;\n    matrixSession: MatrixSession;\n    app: IConfigApp | IApp;\n    ml: IMatrix;\n    notificationSetting: string;\n    defaultNotificationConfig: INotificationConfig;\n    pluginHooks: IPluginHooks;\n    MR1: MR1Impl;\n    matrixApplicationUI: Application;\n    matrixsdk: MatrixSDK;\n    tableMath: TableMath;\n    RiskCalculator: RiskCalculator;\n    RiskControlImpl: RiskControlImpl;\n    ItemSelectionTools: typeof ItemSelectionTools; // typeof because we're referencing an instance\n    ReferenceTools: typeof ReferenceTools; // typeof because we're referencing an instance\n    ConfigPage: typeof ConfigPage; // typeof because we're referencing an instance\n    PluginCore: typeof PluginCore; // typeof because we're referencing an instance\n    PrintProcessor: typeof PrintProcessor; // typeof because we're referencing an instance\n    ControlCore: typeof ControlCore; // typeof because we're referencing an instance\n    UIToolsConstants: typeof UIToolsConstants; // typeof because we're referencing an instance\n    LineEditor: typeof LineEditor; // typeof because we're referencing an instance\n    printProcessorRegistry: PrintProcessorRegistry;\n}\n\ndeclare module window {\n    const matrixSdk: ClientMatrixSdk;\n}\n\nfunction isOutsideMatrixApp(): boolean {\n    return !(window && window.matrixSdk);\n}\n\nexport function getSdkInstance(): ClientMatrixSdk {\n    if (isOutsideMatrixApp()) {\n        throw new Error(\"Client SDK can only be used within Matrix Requirements application\");\n    }\n\n    return window.matrixSdk;\n}\n\nexport function registerPlugin(plugin: PluginCore): void {\n    getSdkInstance().plugins.register(plugin);\n}\n"],"names":[],"sourceRoot":""}