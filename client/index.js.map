{"version":3,"file":"clientSdk.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;;AC4EC,CAAC;AAOD,CAAC;AAEK,MAAM,oBAAoB;;AACtB,oCAAe,GAAG,YAAY,CAAC;AAC/B,6BAAQ,GAAG,YAAY,CAAC;AACxB,gCAAW,GAAG,UAAU,CAAC;AACzB,oCAAe,GAAG,aAAa,CAAC;;;;;;;;;;;;;;;AC1FM;AA+BjD,IAAK,UAYJ;AAZD,WAAK,UAAU;IACX,mDAAmD;IACnD,2CAAQ;IACR,6CAAS;IACT,iDAAW;IACX,uDAAc;IACd,2DAAgB;IAChB,yDAAe;IACf,2CAAQ;IACR,iEAAmB;IACnB,yDAAe,EAAC,0GAA0G;AAE9H,CAAC,EAZI,UAAU,KAAV,UAAU,QAYd;AAYD,IAAK,WAKJ;AALD,WAAK,WAAW;IACZ,qDAAY;IACZ,yDAAU;IACV,+DAAa;IACb,yDAAU,EAAC,8BAA8B;AAC7C,CAAC,EALI,WAAW,KAAX,WAAW,QAKf;AACD,IAAK,YAMJ;AAND,WAAK,YAAY;IACb,iEAAiB;IACjB,6DAAW;IACX,iFAAqB;IACrB,iEAAa;IACb,+DAAY,EAAC,2GAA2G;AAC5H,CAAC,EANI,YAAY,KAAZ,YAAY,QAMhB;;;;;;;;;;;;IC+LoB,sGA5PqB,4CAAoB,QA4PrB;IAAhC,4FA/IA,+BAAU,QA+IA;IAwBnB,SAAS,kBAAkB;QACvB,OAAO,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;IACzC,CAAC;IAED,SAAgB,cAAc;QAC1B,IAAI,kBAAkB,EAAE,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,oEAAoE,CAAC,CAAC;SACzF;QAED,OAAO,MAAM,CAAC,SAAS,CAAC;IAC5B,CAAC;IAND,wCAMC;IAED,SAAgB,cAAc,CAAC,MAAkB;QAC7C,cAAc,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC9C,CAAC;IAFD,wCAEC;;;;;;;;;UCjTD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;UENA;UACA;UACA;UACA","sources":["webpack:///webpack/universalModuleDefinition","webpack:///./ts/core/client/plugins/ScheduleReviewDefines.ts","webpack:///./ts/core/common/UI/Components/ProjectViewDefines.ts","webpack:///./ts/sdk/clientSdk.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/before-startup","webpack:///webpack/startup","webpack:///webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"matrixClientSdk\"] = factory();\n\telse\n\t\troot[\"matrixClientSdk\"] = factory();\n})(this, () => {\nreturn ","import { XRTrimNeedleItem } from \"../../RestResult\"\nimport { IBaseControlOptions } from \"../../common/UI/Controls/BaseControl\"\nimport { ControlState, IStringMap } from \"../../globals\"\n\nexport interface IReviewConfig {\n    // this configures tool available to manage review\n    tasks?: IReviewConfigTask, // to be configured if (jira) tasks should be created\n    lockLabel?: ILockAction, // action to lock items\n    doneLabel?: IReviewStatusUpdate, // action to parse review table to set labels depending on status\n    mailTo?: IMailAction, // button to mail to users\n    allowSelectUserGroups?: boolean, // if not set to false the reviewer popup will have the possibility to select groups\n    showVersions?: boolean, // if true show reviewed version in table for each item\n    showAnnotations?: boolean, // if true show annotation button\n    annotationMasters?: string[], // names of users who can edit other peoples comments\n    showComments?: boolean, // if true show review comment in table for each item\n    showInline?: boolean, // if true show inline triangle/text\n    showHistory?: boolean, // if true show history button for each item\n    /** like showHistoryOutOfDate but it only shows items as out of date if review is not yet completed */\n    showHistoryOutOfDateBeforeDone?: boolean,\n    /** shows items as out of date if current revision is newer than the one in the review */\n    showHistoryOutOfDate?: boolean,\n    readonly?: boolean,\n    appendComments?: boolean // if true put new comments at bottom of comment fields\n    statusDropdown?: string // can be set to overwrite the default status label \"dd_reviewOptions\"\n    canBeModified?: boolean // can be set to true if review can be modified (add/remove users/items)\n    canBeModifiedBy?: string[]  // users who can modify review, empty for all\n    cellAskEdit?: string // if set the table shows this to indicate that user can do something\n    autoshowContext?: boolean // show context frame if not visible once an item cell has been selected\n    createDoc?: ICreateDoc // if set, a button is added to create a signable doc with all review details\n    hide_UI?: boolean // to temporarily hide the control in UI\n}\n\nexport interface ICreateDoc {\n    template: string // the DOC id to be used as template\n    section: string // the title of the section to be filled\n    pasteTo: string // parent DOC folder defaults to F-DOC-1\n    hide?: string[] // remove given field types\n}\n\nexport interface IReviewAction {\n    // defines button\n    buttonName: string, // name of button to do action\n    users: string[] // users who can operate button - empty/null for all\n}\n\nexport interface IMailAction extends IReviewAction {\n    mailSubject: string // subject of email (_id_ for item item id)\n}\n\nexport interface ILockAction extends IReviewAction {\n    label: string, // label to set\n}\n\nexport interface IReviewStatusUpdate extends IReviewAction {\n    // if all reviews of an item have a drop down value which is in the dropdown group passed -> a passed label can be set\n    passedLabel?: string, // label to set\n    // if 1+  item is failed  (empty or dropdown group todo) the failed label will be set\n    failedLabel?: string, // label to set (optional)\n    // if 1+  item is not yet reviewed (empty or dropdown group todo) the todo label will be set\n    todoLabel?: string, // label to set (optional)\n}\n\nexport interface IReviewActionCategoryLabel {\n    label: string, // which label\n    category: string // for which category\n}\n\nexport interface IReviewConfigTask {\n    buttonName: string, // name of button to create tickets\n    users: string[] // users who can operate button - empty/null for all\n    taskPluginId: number, // e.g. jira id\n    taskIssueType: string,\n    taskProject: string,\n    taskDescription?: string\n}\n\nexport interface ITableReviewData {\n    reviewtable: IStringMap[]\n}\n\nexport interface INeedleMap {\n    [key: string]: XRTrimNeedleItem\n}\n\nexport interface IItemReviews {\n    [key: string]: IItemReview\n};\n\nexport interface IItemReview {\n    passed: string[];\n    failed: string[];\n    todo: string[];\n    all: XRTrimNeedleItem[];\n};\n\nexport class ReviewControlColumns {\n    static COL_COMMENT_LOG = \"commentlog\";\n    static COL_ITEM = \"reviewitem\";\n    static COL_VERSION = \"_version\";\n    static COL_ANNOTATIONS = \"_annotation\";\n}\n\nexport interface IReviewControlOptions extends IBaseControlOptions {\n    controlState?: ControlState,\n    canEdit?: boolean,\n    help?: string,\n    fieldValue?: any,\n    valueChanged?: Function,\n    parameter: IReviewConfig,\n    readOnly?: boolean\n}","/// <reference types=\"matrixrequirements-type-declarations\" />\nimport { ControlState, IReference } from \"../../../globals\"\nimport { IDB } from \"../../businesslogic/index\"\nimport { IBaseControlOptions } from \"../Controls/BaseControl\"\n\nexport type {\n    IProjectPanelControlOptions, IVizMode, IDelayedAction, MyNodeData,\n    MyNode, MyDDData, MyFancytree, MyFancytreeOption\n};\nexport { SelectMode, SearchState, SearchUpdate };\n\ninterface IProjectPanelControlOptions extends IBaseControlOptions {\n    parameter?: {\n        readonly?: boolean, // can be set to overwrite the default readonly status\n        placeholder?: string,\n        maxItems?: number,\n        options?: any\n    },\n    noAnimation?: boolean, // set to true not to anmite opening / closing of tree\n    dragAndDrop?: boolean,\n    controlState?: ControlState, // read only rendering\n    highlight?: boolean // true: input should be highlighted in complete page\n    canFilter?: boolean,//  true: filter / search box should be shown\n    isConfigSearch?: boolean\n    serverSearch?: boolean, // true: search server should be enabled: disabled only in admin client\n    expand?: number, //0, // minimum number of levels to expand \n    tree?: IDB[], // tree in fancy tree style\n    tooltips?: boolean, // show tooltips if available\n    collectionChanged?: (count: number) => void,\n    selectionChanged?: (id: string) => void,\n    onExpand?: (id: string) => void, // optional callback, called when folder is opened \n    dropCallback?: Function // callback after node was dropped\n    crossProject?: string // if tree is for another project\n\n    selectedItems?: IReference[], // list of selected items,\n    selectMode?: SelectMode, // if and how items can be selected\n    glueToBottom?: boolean // if set to true the tree will be as big as possible (e.g. for JIRA plugin)\n    isMainTree?: boolean // set to true if this is the main tree on left\n    autoScroll?: boolean // Scroll to selection, defaults to true\n}\nenum SelectMode {\n    /*** DO NOT CHANGED numbers use from baseControl */\n    none = 0, // cannot select\n    items = 1, // can select items (no folders)\n    folders = 2,  // can select folders (no items)\n    singleItem = 3, // can select one item (no folders)\n    singleFolder = 4, // can select one folder (no items)\n    independent = 5, // can select folder and items (independently)\n    auto = 6, // if all children in folder are selected, selection changes to parent\n    independentAuto = 7, //  can select folder and items independently -> but when checking a folder it adds all children\n    autoPrecise = 8 //  if you select a folder it select everything within, if you unselect something it unselects all parents\n\n}\n\ninterface MyNodeData extends Fancytree.FancytreeNode {\n    cstrender?: boolean, background?: string, shortTitle?: string, border?: string,\n    type?: string, icon?: string, hideCheckbox?: boolean, isUnselected?: boolean, extraStyle?: string, classes?: string[],\n    mode?: string\n}\ninterface MyNode extends Fancytree.FancytreeNode { selected?: boolean, unselectable?: boolean, ul?: JQuery, span?: JQuery, type?: string, subMatch?: boolean, shortTitle?: string }\ninterface MyDDData { otherNode?: MyNode, hitMode?: string }\ninterface MyFancytree extends Fancytree.Fancytree { options?: Fancytree.FancytreeOptions }\ninterface MyFancytreeOption extends Fancytree.FancytreeOptions { filter?: { mode?: string } }\n\nenum SearchState {\n    NoSearch = 0, // the whole tree is shown\n    FilterDone, // a local search (filter of the tree by title and id)\n    ServerRunning, // a search request was send to the server \n    ServerDone // the search results returned\n}\nenum SearchUpdate {\n    inserted_node = 1, // called if a new node has been inserted \n    updated_rec, // called after TC have been executed on server, a whole subtree needs to be inserted\n    filter_status_changed, // called when label and therefore visibility is changed\n    title_changed, // the item's title was changed\n    item_dropped // an item was draged and dropped to a new place (if this happens after creating it , it must be refreshed)\n}\ninterface IVizMode { uid: string, icon: string, text: string, mainTree: boolean, asList: boolean, hide: boolean, check: boolean, expand: boolean }\n\ninterface IDelayedAction { type: string, expression: string }\n","import { TodoTypes } from \"./common/enums\";\nimport { BaseWidget } from \"./common/BaseWidget\";\n\nimport { IProcessResult } from \"./../core/printinterface/PrintProcessorInterfaces\";\nimport { PrintProcessor } from \"../print/src/PrintProcessor\";\nimport { Category } from \"./objects/Category\";\nimport { DocItem } from \"./objects/DocItem\";\nimport { Field } from \"./objects/Field\";\nimport { Item } from \"./objects/Item\";\nimport { Project, IProjectContext } from \"./objects/Project\";\nimport { TreeFolder } from \"./objects/TreeFolder\";\n\nimport { IPluginFieldHandler, ControlCore, ControlCoreBase, IControlOptions } from \"./plugins/ControlCore\";\nimport { PluginCore } from \"./plugins/PluginCore\";\n\nimport { IReviewConfig, ITableReviewData, ReviewControlColumns } from \"./../core/client/plugins/ScheduleReviewDefines\";\nimport { AddFileAck, FolderAnswer, CopyItemAck, ExecuteParam } from \"./rest-api\";\nimport { ISimpleSessionControl, StandaloneMatrixSDK } from \"./serverSdk\";\nimport { ITitleAndId, IProjectNeeds } from \"./standalone-interfaces\";\nimport { MatrixSDK } from \"./client\";\n\nimport {\n    IPlugin,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    ISearchResult,\n    ISetField,\n    TestManager,\n    IExternalItem,\n    IItemChangeEvent,\n    IWltItemWithLinks,\n    Tasks,\n    IPluginHooks,\n    MatrixSession,\n    MR1Impl,\n    PluginManager,\n    IDB,\n    NotificationsBL,\n    ICategoryConfig,\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n} from \"../core/common/businesslogic\";\nimport { ItemConfiguration } from \"../core/common/businesslogic/ItemConfiguration\";\nimport { FieldDescriptions } from \"../core/common/businesslogic/FieldDescriptions\";\nimport { SectionDescriptions } from \"../core/common/businesslogic/FieldHandlers/Document/SectionDescriptions\";\n\nimport { IApp, IMatrix, IContextInformation, UIToolsConstants } from \"../core/common/matrixlib/MatrixLibInterfaces\";\nimport { SimpleItemTools } from \"../core/common/matrixlib/SimpleItemTools\";\n\nimport { Application } from \"../core/common/UI/Application\";\nimport { IBaseControlOptions, IBaseControl } from \"../core/common/UI/Controls/BaseControl\";\nimport { refLinkStyle, refLinkTooltip } from \"../core/common/UI/Parts/RefLinkDefines\";\nimport { IItemSelectionParams } from \"../core/common/UI/Controls/itemSelection\";\nimport { ILineEditorLine } from \"../core/common/UI/ILineEditor\";\n\nimport {\n    IStringMap,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    IStringStringArrayMap,\n    IReference,\n    IAnyMap,\n    ControlState,\n    IDataStorage,\n    GlobalMatrix,\n} from \"../core/globals\";\n\nimport {\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRGetProject_Todos_GetTodosAck,\n    XRGetTodosAck,\n    XRProjectInfo,\n    XRTodo,\n    XRTodoCount,\n    XRTrimNeedle,\n    XRTrimNeedleItem,\n} from \"../core/RestResult\";\n\nimport { ProjectStorage } from \"../core/client/ProjectStorage\";\nimport { Notifications } from \"../core/client/plugins/Notifications\";\n\nimport {\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    IWidgetScope,\n} from \"../core/WidgetDashboard/WidgetPluginManager\";\nimport { WidgetPluginsConstants } from \"../core/WidgetDashboard/WidgetPluginsContainer\";\n\nimport {\n    IDropdownOption,\n    ILabel,\n    INotificationConfig,\n    IFieldParameter,\n    IContextPageConfigTab,\n} from \"../core/ProjectSettings\";\n\nimport { IConfigApp } from \"../core/admin/lib/IConfigApp\";\nimport { ConfigPage } from \"../core/admin/lib/ConfigPage\";\nimport { LineEditor } from \"../core/admin/lib/LinEditor\";\n\nimport { SDK_SETTINGS_KEY, SDK_VERSION, validateSdkVersion } from \"./utils/versions\";\nimport { SelectMode } from \"../core/common/UI/Components/ProjectViewDefines\";\n\n// types and interfaces\nexport type {\n    IDashboardParametersBase,\n    IServerSettingsBase,\n    IProjectSettingsBase,\n    IPluginFeatureDashboard,\n    IDashboardPage,\n    IPluginFeatureBase,\n    IPluginFieldValueBase,\n    ITinyMenu,\n    IPluginMenuAction,\n    IPluginSearch,\n    IPluginFieldParameterBase,\n    IPluginFieldOptionsBase,\n    IPluginPrintParamsBase,\n    IPluginConfig,\n    IPluginFeature,\n    IPluginFeatureField,\n    IPluginSettingPage,\n    ITool,\n    IExternalPlugin,\n    IDashboardParameters,\n} from \"./plugins/interfaces\";\n\nexport type {\n    IProcessResult,\n    AddFileAck,\n    FolderAnswer,\n    CopyItemAck,\n    ExecuteParam,\n    ISetField,\n    IPluginFieldHandler,\n    ICategoryConfig,\n    IBaseControl,\n    TestManager,\n    IDataStorage,\n    IDB,\n    ILineEditorLine,\n    IDropdownOption,\n    IPlugin,\n    IStringMap,\n    IProjectPageParam,\n    IPluginPanelOptions,\n    IWltItemWithLinks,\n    IBaseControlOptions,\n    IItem,\n    IRestResult,\n    IStringNumberMap,\n    IStringStringArrayMap,\n    ISearchResult,\n    XRGetProject_Needle_TrimNeedle,\n    XRGetTodosAck,\n    XRGetProject_StartupInfo_ListProjectAndSettings,\n    XRTrimNeedleItem,\n    XRTodo,\n    XRTrimNeedle,\n    XRGetProject_CategoryList_GetProjectStructAck,\n    XRGetProject_ProjectSettingAll_GetSettingAck,\n    IWidgetPlugin,\n    IDisplayedWidget,\n    IWidgetParameters,\n    XRProjectInfo,\n    IReference,\n    ILabel,\n    IItemSelectionParams,\n    IAnyMap,\n    INotificationConfig,\n    IContextInformation,\n    IContextPageConfigTab,\n    XRTodoCount,\n    XRGetProject_Todos_GetTodosAck,\n    IItemChangeEvent,\n    IExternalItem,\n    IFieldParameter,\n    IConfigApp,\n    IProjectContext,\n    IControlOptions,\n    ISimpleSessionControl,\n    ITitleAndId,\n    IProjectNeeds,\n    ITableReviewData,\n    IReviewConfig,\n};\n\n// classes\nexport type {\n    PrintProcessor,\n    UIToolsConstants,\n    FieldDescriptions,\n    SectionDescriptions,\n    IWidgetScope,\n    ProjectStorage,\n    WidgetPluginsConstants,\n    refLinkStyle,\n    refLinkTooltip,\n    ControlState,\n    ItemConfiguration,\n    Notifications,\n    Tasks,\n    ControlCore,\n    ControlCoreBase,\n    PluginCore,\n    LineEditor,\n    ConfigPage,\n    NotificationsBL,\n    TodoTypes,\n    Item,\n    Field,\n    Project,\n    BaseWidget,\n    Category,\n    DocItem,\n    TreeFolder,\n    StandaloneMatrixSDK,\n    SimpleItemTools,\n};\n\n// handlers\nexport type {\n    BaseTableFieldHandler,\n    BaseValidatedTableFieldHandler,\n    CheckboxFieldHandler,\n    CrosslinksFieldHandler,\n    DateFieldHandler,\n    DHFFieldHandler,\n    DropdownFieldHandler,\n    EmptyFieldHandler,\n    GateFieldHandler,\n    GenericFieldHandler,\n    HyperlinkFieldHandler,\n    ItemSelectionFieldHandler,\n    ItemSelectionFieldHandlerFromTo,\n    RichtextFieldHandler,\n    SteplistFieldHandler,\n    TestResultFieldHandler,\n    TestStepsFieldHandler,\n    TestStepsResultFieldHandler,\n    TextlineFieldHandler,\n    UserFieldHandler,\n};\n\nexport { SelectMode, ReviewControlColumns };\n\nexport interface ClientMatrixSdk {\n    plugins: PluginManager;\n    globalMatrix: GlobalMatrix;\n    matrixSession: MatrixSession;\n    app: IApp;\n    ml: IMatrix;\n    notificationSetting: string;\n    defaultNotificationConfig: INotificationConfig;\n    pluginHooks: IPluginHooks;\n    MR1: MR1Impl;\n    matrixApplicationUI: Application;\n    matrixsdk: MatrixSDK;\n    ConfigPage: typeof ConfigPage; // typeof because we're referencing an instance\n    PluginCore: typeof PluginCore; // typeof because we're referencing an instance\n    PrintProcessor: typeof PrintProcessor; // typeof because we're referencing an instance\n    ControlCore: typeof ControlCore; // typeof because we're referencing an instance\n}\n\ndeclare module window {\n    const matrixSdk: ClientMatrixSdk;\n}\n\nfunction isOutsideMatrixApp(): boolean {\n    return !(window && window.matrixSdk);\n}\n\nexport function getSdkInstance(): ClientMatrixSdk {\n    if (isOutsideMatrixApp()) {\n        throw new Error(\"Client SDK can only be used within Matrix Requirements application\");\n    }\n\n    return window.matrixSdk;\n}\n\nexport function registerPlugin(plugin: PluginCore): void {\n    getSdkInstance().plugins.register(plugin);\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module used 'module' so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(251);\n",""],"names":[],"sourceRoot":""}